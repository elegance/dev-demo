" -----------------   Author: orh
" -----------------    Email: webdevelop@sohu.com
" -----------------  WebSite: http://www.noteing.com
" -----------------     Date: 2012-05-01

"colorscheme blackboard       " 着色模式：蓝色背景,Vim\vimfiles\colors下

"# 配色来源https://github.com/altercation/vim-colors-solarized
"# 要将solarized.vim 文件移动至vim下的colors下
set background=dark
"set background=light
colorscheme solarized







set guifont=Envy_Code_R:h11  " 字体 && 字号，系统安装的字体
set tabstop=4                " 设置tab键的宽度
set shiftwidth=4             " 换行时行间交错使用4个空格
set autoindent               " 自动对齐
set backspace=2              " 设置退格键可用
set cindent shiftwidth=4     " 自动缩进4空格
set smartindent              " 智能自动缩进
set ai!                      " 设置自动缩进
set nu!                      " 显示行号
"set showmatch               " 显示括号配对情况
set mouse=a                  " 启用鼠标
set ruler                    " 右下角显示光标位置的状态行
set incsearch                " 开启实时搜索功能
set hlsearch                 " 开启高亮显示结果
set nowrapscan               " 搜索到文件两端时不重新搜索
set nocompatible             " 关闭兼容模式
set vb t_vb=                 " 关闭提示音
"set cursorline              " 突出显示当前行
set hidden                   " 允许在有未保存的修改时切换缓冲区
set list                     " 显示Tab符，使用一高亮竖线代替
set listchars=tab:\|\ ,

syntax enable                " 打开语法高亮
syntax on                    " 开启文件类型侦测
filetype indent on           " 针对不同的文件类型采用不同的缩进格式
filetype plugin on           " 针对不同的文件类型加载对应的插件
filetype plugin indent on    " 启用自动补全


if has("gui_running")
	au GUIEnter * simalt ~x  " 窗口启动时自动最大化
	"winpos 20 20            " 指定窗口出现的位置，坐标原点在屏幕左上角
	"set lines=20 columns=90 " 指定窗口大小，lines为高度，columns为宽度
	set guioptions-=m       " 隐藏菜单栏
	set guioptions-=T       " 隐藏工具栏
	"set guioptions-=L       " 隐藏左侧滚动条
	"set guioptions-=r       " 隐藏右侧滚动条
	"set guioptions-=b       " 隐藏底部滚动条
	"set showtabline=0       " 隐藏Tab栏
endif

set writebackup              " 设置无备份文件
set nobackup
set autochdir                " 设定文件浏览器目录为当前目录
"set nowrap                  " 设置不自动换行
set foldmethod=syntax        " 选择代码折叠类型
set foldlevel=100            " 禁止自动折叠

set laststatus=2             " 开启状态栏信息
set cmdheight=2              " 命令行的高度，默认为1，这里设为2

" 每行超过80个的字符用下划线标示
au BufRead,BufNewFile *.s,*.asm,*.h,*.c,*.cpp,*.cc,*.java,*.cs,*.erl,*.hs,*.sh,*.lua,*.pl,*.pm,*.php,*.py,*.rb,*.erb,*.vim,*.js,*.css,*.xml,*.html,*.xhtml 2match Underlined /.\%81v/


" 设置编码
set fenc=utf-8
set encoding=utf-8
set fileencodings=utf-8,gbk,cp936,latin-1
" 解决菜单乱码
source $VIMRUNTIME/delmenu.vim
source $VIMRUNTIME/menu.vim
" 解决consle输出乱码
language messages zh_CN.utf-8


" For Haskell
:let hs_highlight_delimiters=1            " 高亮定界符
:let hs_highlight_boolean=1               " 把True和False识别为关键字
:let hs_highlight_types=1                 " 把基本类型的名字识别为关键字
:let hs_highlight_more_types=1            " 把更多常用类型识别为关键字
:let hs_highlight_debug=1                 " 高亮调试函数的名字
:let hs_allow_hash_operator=1             " 阻止把#高亮为错误


" ======= 引号 && 括号自动匹配 ======= "

:inoremap ( ()<ESC>i

:inoremap ) <c-r>=ClosePair(')')<CR>

:inoremap { {}<ESC>i

:inoremap } <c-r>=ClosePair('}')<CR>

:inoremap [ []<ESC>i

:inoremap ] <c-r>=ClosePair(']')<CR>

":inoremap < <><ESC>i

":inoremap > <c-r>=ClosePair('>')<CR>

:inoremap " ""<ESC>i

:inoremap ' ''<ESC>i

:inoremap ` ``<ESC>i

function ClosePair(char)
	if getline('.')[col('.') - 1] == a:char
		return "\<Right>"
	else
		return a:char
	endif
endf

"Vundle 插件管理{{{
filetype off
" 此处规定Vundle的路径
set rtp+=$VIM/vimfiles/bundle/vundle/
call vundle#rc('$VIM/vimfiles/bundle/')
"用 vundle来管理 vundle
Bundle 'gmarik/vundle'    
filetype plugin indent on
"安装插件，3种方式安装 网上的插件:

"格式①：Github上其他用户的仓库（非vim-scripts账户里的仓库，所以要加Github用户名）
"#->
"比snipmate更强的代码片段补,这个暂时不适用因为网速还没找到很好的资料来使用它暂时先使用snipmate
"Bundle 'drmingdrmer/xptemplate'   
Bundle 'msanders/snipmate.vim'

"#->配色
Bundle 'altercation/vim-colors-solarized'

"#-> 编写html代码
"Bundle 'mattn/zencoding-vim'
Bundle 'mattn/emmet-vim'
"#-> js 检查,Node.js must be in your path.  nodejs.org
""Bundle 'wookiehangover/jshint.vim'
Bundle 'walm/jshint.vim'
"#支持多重选取内容的 Vim 插件 https://github.com/terryma/vim-multiple-cursors
Bundle 'terryma/vim-multiple-cursors'

"格式②：vim-scripts里面的仓库，直接打仓库名即可。
"#-> vim脚本，提供了一些实用函数和命令,其它插件有可能依赖它
Bundle 'L9'
"#-> 
Bundle 'ctags.vim'
Bundle 'taglist.vim'

"#-> VIM中的文件查找利器
Bundle 'FuzzyFinder'    
"#-> 可以打开历史文件列表以达到快速切换文件的目的
Bundle 'bufexplorer.zip' 

"#-> VIM 中查看一个文件中包含的函数列表，或是一个类包含的方法列表
"Bundle 'taglist.vim'    

"#-> 高亮显示多个单词
Bundle 'Mark'    
"#-> 打开大文件
Bundle 'LargeFile'
"{{
let g:LargeFile=10 "把大文件的标准定义为10MB
"}}"
"#-> 提供日历的功能，并且可以记笔记
"Bundle 'calendar.vim'
"{{
let g:calendar_diary = "E:/vimdiary" " 设置日记的存储路径
let g:calendar_monday = 1 "以星期一为开始
let g:calendar_focus_today = 1 " 光标在当天的日期上
let g:calendar_mark = 'left-fit' "可以让*和数字可靠近
"}}

"#-> 一个以树形结构导航文件系统的插件
Bundle 'The-NERD-tree'    
"{{ NERD-tree 的配置
"NERDTree plugin
let NERDTreeWinPos = "left" "where NERD tree window is placed on the screen
"let NERDTreeWinSize = 31 "size of the NERD tree
nmap <F7> <ESC>:NERDTreeToggle<RETURN>" Open and close the NERD_tree.vim separately
"}}"
"#-> winmanager
Bundle 'winmanager'
"{{
"let g:winManagerWindowLayout = "BufExplorer,FileExplorer|TagList"
let g:winManagerWindowLayout = "TagList|FileExplorer,BufExplorer"
"设置winmanager的宽度，默认为25
let g:winManagerWidth = 30
let g:AutoOpenWinManager = 1
"定义打开关闭winmanager按键
nmap <silent> <F8> :WMToggle<cr>
"}}"

"格式③：非Github的Git仓库,这里我已经把它 注释掉了，当执行 BundleInstall时这个插件就不会安装了，执行BundleClean 就会清除这个插件所占用的目录
"Bundle 'git://vim-latex.git.sourceforge.net/gitroot/vim-latex/vim-latex'
filetype plugin indent on     " required 
"}}}"
