
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
	#lua模块路径，多个之间”;”分隔，其中”;;”表示默认搜索路径，默认到/usr/servers/nginx下找  
	lua_package_path "/usr/example/lualib/?.lua;;";  #lua 模块  
	lua_package_cpath "/usr/example/lualib/?.so;;";  #c模块   

	#include lua.conf;
	include /usr/example/example.conf;

	#Nginx 全局内存 - 在Master进程 多个Worker进程间共享数据
	lua_shared_dict shared_data 1m;

	#nginx_by_lua 用来完成一些耗时模块的加载，或初始一些全局配置
	init_by_lua_file /usr/example/lua/init.lua;

	#init_worker_by_lua 用于启动一些定时任务，比如心跳检查，定时拉取服务配置等等；出处的任务时跟Worker进程数量有关系的
	#比如有2个worker进程那么就会启动两个完全一样的定时任务
	init_worker_by_lua_file /usr/example/lua/init_worker.lua;

	#默认连接池大小，默认30
	lua_socket_pool_size 30;
	#默认超时时间，默认60s
	lua_socket_keepalive_timeout 60s;

    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       8080;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }


}
